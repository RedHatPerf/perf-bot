package io.perf.tools.bot.model.config;

import java.util.Map;

/**
 * Defines the configuration and properties for a specific job that can be executed
 * from GitHub. This class encapsulates details about the job's identity, how to interact
 * it, how it handles parameters related to source control (e.g., GitHub),
 * where it stores its results (e.g., Horreum), and any other custom parameters.
 */
public class JobDef {
    /**
     * The human-readable name of the job.
     * This is often used for display purposes or as a friendly identifier.
     */
    public String name;

    /**
     * The identifier of the job within the underlying execution platform
     * (e.g., Jenkins job path, Tekton PipelineRun name, GitHub Actions workflow ID).
     * This is used to programmatically trigger or interact with the job on that platform.
     */
    public String platformJobId;

    /**
     * The name of the job parameter that should be populated with the
     * pull request number when the job is triggered in the context of a pull request.
     * This allows the job to know which PR it is operating on.
     */
    public String pullRequestNumberParam;

    /**
     * The name of the job parameter that should be populated with the
     * repository full name when the job is triggered in the context of a pull request.
     * This allows the job to know which repository it is operating on.
     */
    public String repoFullNameParam;

    /**
     * The name of the job parameter that should be populated with the
     * specific commit SHA (e.g., HEAD of the pull request branch) from the repository.
     * This allows the job to check out or operate on the correct version of the code.
     */
    public String repoCommitParam;

    /**
     * Configuration for Horreum, specifying where and how the results
     * generated by this job should be pushed or stored.
     *
     * @see HorreumConfig
     */
    public HorreumConfig datastoreConfig;

    /**
     * A map of any additional configurable parameters for the job.
     * The key is a String representing the parameter name, and the value
     * is a {@link Param} object.
     */
    public Map<String, Param> configurableParams;
}
